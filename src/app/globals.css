@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255;
  --background-rgb: 0, 0, 0;
  --safe-area-bottom: 4rem; /* Default fallback value */
}

html,
body {
  background-color: rgb(var(--background-rgb));
  color: rgb(var(--foreground-rgb));
  height: 100%;
  overflow: hidden;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

iframe {
  border: 0;
  display: block;
  overflow: hidden;
  height: 100%;
  width: 100%;
}

/* Bottom sheet custom styles */
[data-rsbs-overlay] {
  background: rgb(17, 24, 39) !important; /* bg-gray-900 */
  z-index: 3 !important;
}

[data-rsbs-backdrop] {
  z-index: 2 !important;
}

[data-rsbs-root] {
  z-index: 3 !important;
}

[data-rsbs-root]:after {
  background: rgb(17, 24, 39) !important; /* bg-gray-900 */
}

[data-rsbs-has-header='true']:after {
  background: rgb(17, 24, 39) !important; /* bg-gray-900 */
}

[data-rsbs-header] {
  background: rgb(17, 24, 39) !important; /* bg-gray-900 */
  z-index: 4 !important;
}

[data-rsbs-footer] {
  background: rgb(17, 24, 39) !important; /* bg-gray-900 */
  z-index: 4 !important;
  padding-bottom: 0 !important;
  padding-top: 0 !important;
}

[data-rsbs-scroll] {
  background: rgb(17, 24, 39) !important; /* bg-gray-900 */
  /* overflow-y: auto !important; */
}

[data-rsbs-content] {
  background: rgb(17, 24, 39) !important; /* bg-gray-900 */
  /* overflow: hidden !important; */
}

/* Bottom Sheet Styles */
[data-rsbs-header]:before {
  background: white !important;
}

/* Custom intro.js styles */
.introjs-tooltip {
  background-color: #111827 !important;
  color: white !important;
  border-radius: 0.5rem !important;
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1) !important;
}

.introjs-tooltiptext {
  color: white !important;
  padding: 1rem !important;
}

.introjs-arrow.top, .introjs-arrow.top-middle, .introjs-arrow.top-right {
  border-bottom-color: #111827 !important;
}

.introjs-arrow.bottom, .introjs-arrow.bottom-middle, .introjs-arrow.bottom-right {
  border-top-color: #111827 !important;
}

.introjs-arrow.left, .introjs-arrow.right {
  border-right-color: #111827 !important;
}

.introjs-button {
  background: #1f2937 !important;
  border: none !important;
  color: white !important;
  text-shadow: none !important;
  border-radius: 0.375rem !important;
  padding: 0.5rem 1rem !important;
  margin: 4px !important;
  font-size: 0.875rem !important;
  transition: background-color 0.2s !important;
}

.introjs-button:hover {
  background: #374151 !important;
  box-shadow: none !important;
}

.introjs-disabled {
  opacity: 0.5 !important;
  cursor: not-allowed !important;
}

.introjs-progress {
  background-color: #374151 !important;
}

.introjs-progressbar {
  background-color: #6366f1 !important;
}

.introjs-helperLayer {
  background-color: rgba(255, 255, 255, 0.1) !important;
  border: none !important;
  box-shadow: 0 0 0 1000px rgba(0, 0, 0, 0.5) !important;
}

.intro-highlight {
  border-radius: 0.5rem !important;
  box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.4) !important;
}

/* Mobile device specific styles */
@layer base {
  /* Disable hover effects on mobile devices */
  .is-mobile-device *:hover {
    /* Override any transitions involving background-color, color, or opacity */
    transition-property: none !important;
    /* Prevent background color changes on hover */
    background-color: inherit !important;
    /* Keep original colors */
    color: inherit !important;
    /* Don't change opacity */
    opacity: inherit !important;
    /* Ensure transforms are not affected by hover state */
    transform: inherit !important;
    /* Prevent box-shadow changes */
    box-shadow: inherit !important;
    /* No filter changes */
    filter: inherit !important;
  }
  
  /* Exceptions for interactive elements that need to retain their styling */
  /* Exception for toggle switches */
  .is-mobile-device [class*="bg-green-600"] {
    background-color: #16a34a !important; /* green-600 */
  }
  
  .is-mobile-device [class*="translate-x-5"] {
    transform: translateX(1.25rem) !important; /* 5 Ã— 0.25rem */
  }
  
  /* Override hover-specific classes in Tailwind when on mobile */
  .is-mobile-device .hover\:bg-indigo-500:hover {
    background-color: #6366f1 !important; /* Use the original indigo-600 color */
  }
  
  .is-mobile-device .hover\:bg-gray-700:hover,
  .is-mobile-device .hover\:bg-gray-800:hover,
  .is-mobile-device .hover\:bg-gray-700\/50:hover,
  .is-mobile-device .hover\:bg-gray-800\/50:hover,
  .is-mobile-device .hover\:bg-gray-800\/70:hover {
    /* Keep original background */
    background-color: inherit !important;
  }
  
  .is-mobile-device .hover\:text-white:hover {
    /* Keep original text color */
    color: inherit !important;
  }
  
  /* Most reliable solution: use a media query as a fallback */
  @media (hover: none) {
    * {
      /* Make sure no hover styles are applied on touch devices */
      transition-property: initial !important;
    }
    
    /* Explicitly disable transitions on common interactive elements */
    button:hover, a:hover, .hover\:bg-indigo-500:hover, 
    .hover\:bg-gray-700:hover, .hover\:bg-gray-800:hover {
      background-color: initial !important;
      color: initial !important;
      transform: initial !important;
      opacity: initial !important;
    }
  }
}

/* Custom utility class for safe area padding */
@layer utilities {
  .pb-safe-area {
    padding-bottom: max(calc(env(safe-area-inset-bottom, 0px) + var(--safe-area-bottom, 80px)), 80px) !important;
  }
  
  /* Bottom-positioned fixed elements need this utility for proper positioning */
  .bottom-safe {
    bottom: max(calc(env(safe-area-inset-bottom, 0px) + 24px), 36px) !important;
  }

  /* Scrollable container that respects safe area */
  .safe-scroll-container {
    overflow-y: auto;
    padding-bottom: max(calc(env(safe-area-inset-bottom, 0px) + 120px), 120px) !important;
    -webkit-overflow-scrolling: touch;
  }
}
